<?xml version="1.0" encoding="UTF-8"?>

<project name="krb-clojure-utils" default="jar" basedir=".">

  <property file="build.properties" />
  <property name="clojure.jar.repo" value="${user.home}/.clojure"/>
  <property name="source.dir" value="${basedir}/src"/>
  <property name="test.source.dir" value="${basedir}/test/src"/>
  <property name="target.dir" value="${basedir}/target"/>
  <property name="classes.dir" value="${target.dir}/classes"/>
  <property name="module.name" value="krb-clojure-utils"/>
  <property name="clojure.src.dir" value="${basedir}/src/clj"/>
  <property name="module.version" value="0.1"/>
  <property name="jar.file.name" value="${module.name}-${module.version}.jar"/>
  <property name="deps.dir" value="${basedir}/deps"/>
  <property name="deps.file" value="kburton-clojure-utils-deps.zip"/>
  <property name="deps.url" value="http://cloud.github.com/downloads/kyleburton/sandbox/${deps.file}"/>

  <property name="clojutura.report.dir" value="${basedir}/target/clojurtura"/>
  <property name="clojutura.src.dir" value="${clojure.src.dir}"/>

  <path id="classpath">
    <path location="${classes.dir}" />
    <path location="${source.dir}" />
    <path location="${clojure.src.dir}" />
    <path location="${test.source.dir}/clj" />
    <fileset dir="${basedir}/deps">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="insturmented-classpath">
    <path location="${test.source.dir}/clj" />
    <fileset dir="${basedir}/deps">
      <include name="*.jar" />
    </fileset>
  </path>

  <target name="fetch-deps" description="download dependencies">
    <get usetimestamp="true" description="Java dependencies." src="${deps.url}" dest="${deps.file}" />
    <unzip src="${deps.file}" dest="." />
  </target>

  <target name="compile" description="Compile the code">
    <mkdir dir="${classes.dir}"/>
    <javac destdir="${classes.dir}" debug="true">
      <src>
        <pathelement location="${basedir}/src/java"/>
      </src>
      <classpath>
        <fileset dir="${clojure.jar.repo}">
          <include name="*" />
        </fileset>
      </classpath>
    </javac>
    <java classname="clojure.lang.Compile" fork="true">
      <sysproperty key="clojure.compile.path" value="${classes.dir}" />
      <classpath refid="classpath" />
      <arg value="com.github.kyleburton.sandbox.utils" />
      <arg value="com.github.kyleburton.sandbox.cl-bayes" />
      <arg value="com.github.kyleburton.sandbox.ftp" />
      <arg value="com.github.kyleburton.sandbox.landmark-parser" />
      <arg value="com.github.kyleburton.sandbox.log4j" />
      <arg value="com.github.kyleburton.sandbox.mdb" />
      <arg value="com.github.kyleburton.sandbox.memoize" />
      <!-- <arg value="com.github.kyleburton.sandbox.incanter" /> -->
      <!-- <arg value="com.github.kyleburton.sandbox.git" /> -->
      <!-- <arg value="com.github.kyleburton.sandbox.jsch" /> -->
      <!-- <arg value="com.github.kyleburton.sandbox.mina-ftp" /> -->
      <!-- <arg value="com.github.kyleburton.sandbox.lj" /> -->
      <arg value="com.github.kyleburton.sandbox.mvn" />
      <arg value="com.github.kyleburton.sandbox.quartz" />
      <arg value="com.github.kyleburton.sandbox.rabbitmq" />
      <arg value="com.github.kyleburton.sandbox.ref-data" />
      <arg value="com.github.kyleburton.sandbox.regex" />
      <arg value="com.github.kyleburton.sandbox.sql" />
      <arg value="com.github.kyleburton.sandbox.swing" />
      <arg value="com.github.kyleburton.sandbox.tiger" />
      <arg value="com.github.kyleburton.sandbox.utils" />
      <arg value="com.github.kyleburton.sandbox.web" />
    </java>
  </target>

  <target name="jar" depends="compile" description="Build the JAR">
    <jar jarfile="${target.dir}/${jar.file.name}">
      <fileset dir="${classes.dir}" includes="**/*.class"/>
      <!-- <fileset dir="${source.dir}/clj" includes="**/*.clj" /> -->
    </jar>
  </target>

  <target name="fulljar" depends="compile" description="Build the JAR (inclusive of .clj sources)">
    <jar jarfile="${target.dir}/${jar.file.name}">
      <fileset dir="${clojure.src.dir}" includes="**/*.clj"/>
      <fileset dir="${classes.dir}" includes="**/*.class"/>
    </jar>
  </target>

  <target name="install" depends="jar" description="Create jar symlink in $HOME/.clojure/${jar.file.name}">
    <delete file="${user.home}/.clojure/${jar.file.name}"/>
    <symlink link="${user.home}/.clojure/${jar.file.name}" resource="${target.dir}/${jar.file.name}" />
  </target>

  <target name="clean" description="Clean the output directory">
    <delete dir="${target.dir}"/>
  </target>

  <target name="repl" depends="jar" description="Run a Clojure Repl">
    <java classname="clojure.lang.Repl" fork="true">
      <classpath>
        <pathelement location="${clojure.src.dir}/"/>
        <pathelement location="${classes.dir}/"/>
        <fileset dir="${deps.dir}" includes="*.jar"/>
      </classpath>
    </java>
  </target>

  <!-- Cobertura -->
  <property name="cobertura.dir" value="cobertura" />
  <path id="cobertura.classpath">
    <fileset dir="deps">
      <include name="*.jar" />
    </fileset>
  </path>

  <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>
  <target name="test">
    <!-- <property name="cp" refid="cobertura.classpath"/> -->
    <!-- <echo message="Classpath = ${cp}"/> -->
    <cobertura-instrument todir="target/instrumented-classes">
      <classpath>
        <path refid="classpath" />
      </classpath>
      <fileset dir="target/classes">
        <include name="**/*.class"/>
      </fileset>
    </cobertura-instrument>
    <java classname="clojure.main" fork="true">
      <arg value="test/src/clj/com/github/kyleburton/sandbox/suite.clj" />
      <classpath>
        <path refid="insturmented-classpath" />
        <path location="target/instrumented-classes" />
      </classpath>
    </java>
    <java classname="clojure.main" fork="true">
      <sysproperty key="clojutura.report.dir" value="${clojutura.report.dir}" />
      <sysproperty key="clojutura.src.dir"    value="${clojutura.src.dir}" />
      <arg value="${basedir}/clojutura.clj" />
      <classpath>
        <path refid="classpath" />
      </classpath>
    </java>

    <cobertura-report format="html" srcdir="${clojure.src.dir}" destdir="target/cobertura/report"/>
  </target>
  <!-- Cobertura -->

</project>
