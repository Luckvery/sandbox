<?xml version="1.0" encoding="UTF-8"?>

<project name="krb-clojure-utils" default="jar" basedir=".">

  <property file="build.properties" />
  <property name="clojure.jar.repo" value="${user.home}/.clojure"/>
  <property name="source.dir" value="${basedir}/src"/>
  <property name="test.source.dir" value="${basedir}/test/src"/>
  <property name="target.dir" value="${basedir}/target"/>
  <property name="classes.dir" value="${target.dir}/classes"/>
  <property name="module.name" value="krb-clojure-utils"/>
  <property name="clojure.src.dir" value="${basedir}/src/clj"/>
  <property name="module.version" value="0.1"/>
  <property name="jar.file.name" value="${module.name}-${module.version}.jar"/>
  <property name="krb.repo.url" value="http://asymmetrical-view.com/personal/repo/"/>
  <property name="deps.dir" value="${basedir}/deps"/>
  <property name="deps.file" value="kburton-clojure-utils-deps.zip"/>
  <property name="deps.url" value="http://cloud.github.com/downloads/kburton/sandbox/${deps.file}"/>

  <path id="classpath">
    <path location="${classes.dir}" />
    <path location="${source.dir}" />
    <path location="${clojure.src.dir}" />
    <path location="${test.source.dir}/clj" />
    <fileset dir="${basedir}/deps">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="insturmented-classpath">
    <path location="${test.source.dir}/clj" />
    <fileset dir="${basedir}/deps">
      <include name="*.jar" />
    </fileset>
  </path>

  <target name="fetch-deps" description="download dependencies">
    <get usetimestamp="true" description="Java dependencies." src="$deps.url}" dest="${deps.file}" />
    <unzip src="${deps.file}" dest="." />
  </target>

  <!-- Emma support -->
  <path id="emma.lib">
    <fileset dir="${deps.dir}">
      <include name="*.jar" />
    </fileset>
  </path>
  
  <taskdef resource="emma_ant.properties" classpathref="emma.lib" />

  <target name="emma" description="turns on EMMA instrumentation/reporting" >
    <property name="emma.enabled" value="true" />
  </target>
  <!-- Emma support -->

  <target name="compile" description="Compile the code">
    <mkdir dir="${classes.dir}"/>
    <javac destdir="${classes.dir}" debug="true">
      <src>
        <pathelement location="${basedir}/src/java"/>
      </src>
      <classpath>
        <fileset dir="${clojure.jar.repo}">
          <include name="*" />
        </fileset>
      </classpath>
    </javac>
    <java classname="clojure.lang.Compile" fork="true">
      <sysproperty key="clojure.compile.path" value="${classes.dir}" />
      <classpath refid="classpath" />
      <arg value="com.github.kyleburton.sandbox.utils" />
      <arg value="com.github.kyleburton.sandbox.cl-bayes" />
      <arg value="com.github.kyleburton.sandbox.ftp" />
      <arg value="com.github.kyleburton.sandbox.landmark-parser" />
      <arg value="com.github.kyleburton.sandbox.lj" />
      <arg value="com.github.kyleburton.sandbox.log4j" />
      <arg value="com.github.kyleburton.sandbox.mdb" />
      <arg value="com.github.kyleburton.sandbox.memoize" />
      <!-- <arg value="com.github.kyleburton.sandbox.incanter" /> -->
      <!-- <arg value="com.github.kyleburton.sandbox.git" /> -->
      <!-- <arg value="com.github.kyleburton.sandbox.jsch" /> -->
      <!-- <arg value="com.github.kyleburton.sandbox.mina-ftp" /> -->
      <arg value="com.github.kyleburton.sandbox.mvn" />
      <arg value="com.github.kyleburton.sandbox.quartz" />
      <arg value="com.github.kyleburton.sandbox.rabbitmq" />
      <arg value="com.github.kyleburton.sandbox.ref-data" />
      <arg value="com.github.kyleburton.sandbox.regex" />
      <arg value="com.github.kyleburton.sandbox.sql" />
      <arg value="com.github.kyleburton.sandbox.swing" />
      <arg value="com.github.kyleburton.sandbox.tiger" />
      <arg value="com.github.kyleburton.sandbox.utils" />
      <arg value="com.github.kyleburton.sandbox.web" />
    </java>
  </target>

  <target name="jar" depends="compile" description="Build the JAR">
    <jar jarfile="${target.dir}/${jar.file.name}">
      <fileset dir="${classes.dir}" includes="**/*.class"/>
      <!-- <fileset dir="${source.dir}/clj" includes="**/*.clj" /> -->
    </jar>
  </target>

  <target name="fulljar" depends="compile" description="Build the JAR (inclusive of .clj sources)">
    <jar jarfile="${target.dir}/${jar.file.name}">
      <fileset dir="${clojure.src.dir}" includes="**/*.clj"/>
      <fileset dir="${classes.dir}" includes="**/*.class"/>
    </jar>
  </target>

  <target name="install" depends="jar" description="Create jar symlink in $HOME/.clojure/${jar.file.name}">
    <delete file="${user.home}/.clojure/${jar.file.name}"/>
    <symlink link="${user.home}/.clojure/${jar.file.name}" resource="${target.dir}/${jar.file.name}" />
  </target>

  <target name="clean" description="Clean the output directory">
    <delete dir="${target.dir}"/>
  </target>

  <!-- TODO: pull all the jars at this url...or make 1 zip file, this
  is too much to be in the build.xml -->
  <target name="fetch-deps" description="download my dependencies from my personal repository">
    <mkdir dir="${deps.dir}"/>
    <get src="${krb.repo.url}/ant-1.7.0.jar" dest="${deps.dir}/ant-1.7.0.jar" />
    <get src="${krb.repo.url}/ant-launcher-1.7.0.jar" dest="${deps.dir}/ant-launcher-1.7.0.jar" />
    <get src="${krb.repo.url}/antlr-2.7.6.jar" dest="${deps.dir}/antlr-2.7.6.jar" />
    <get src="${krb.repo.url}/aopalliance-1.0.jar" dest="${deps.dir}/aopalliance-1.0.jar" />
    <get src="${krb.repo.url}/asm-1.5.3.jar" dest="${deps.dir}/asm-1.5.3.jar" />
    <get src="${krb.repo.url}/asm-attrs-1.5.3.jar" dest="${deps.dir}/asm-attrs-1.5.3.jar" />
    <get src="${krb.repo.url}/aspectjrt-1.5.4.jar" dest="${deps.dir}/aspectjrt-1.5.4.jar" />
    <get src="${krb.repo.url}/cglib-2.1_3.jar" dest="${deps.dir}/cglib-2.1_3.jar" />
    <get src="${krb.repo.url}/ci-bayes-1.0.8.jar" dest="${deps.dir}/ci-bayes-1.0.8.jar" />
    <get src="${krb.repo.url}/clojure-contrib.jar" dest="${deps.dir}/clojure-contrib.jar" />
    <get src="${krb.repo.url}/clojure.jar" dest="${deps.dir}/clojure.jar" />
    <get src="${krb.repo.url}/commons-cli-1.1.jar" dest="${deps.dir}/commons-cli-1.1.jar" />
    <get src="${krb.repo.url}/commons-codec-1.3.jar" dest="${deps.dir}/commons-codec-1.3.jar" />
    <get src="${krb.repo.url}/commons-collections-3.2.jar" dest="${deps.dir}/commons-collections-3.2.jar" />
    <get src="${krb.repo.url}/commons-fileupload-1.2.1.jar" dest="${deps.dir}/commons-fileupload-1.2.1.jar" />
    <get src="${krb.repo.url}/commons-httpclient-3.1.jar" dest="${deps.dir}/commons-httpclient-3.1.jar" />
    <get src="${krb.repo.url}/commons-io-1.2.jar" dest="${deps.dir}/commons-io-1.2.jar" />
    <get src="${krb.repo.url}/commons-io-1.4.jar" dest="${deps.dir}/commons-io-1.4.jar" />
    <get src="${krb.repo.url}/commons-lang-2.4.jar" dest="${deps.dir}/commons-lang-2.4.jar" />
    <get src="${krb.repo.url}/commons-logging-1.1.1-sources.jar" dest="${deps.dir}/commons-logging-1.1.1-sources.jar" />
    <get src="${krb.repo.url}/commons-logging-1.1.1.jar" dest="${deps.dir}/commons-logging-1.1.1.jar" />
    <get src="${krb.repo.url}/commons-logging-adapters-1.1.1.jar" dest="${deps.dir}/commons-logging-adapters-1.1.1.jar" />
    <get src="${krb.repo.url}/commons-logging-api-1.1.1.jar" dest="${deps.dir}/commons-logging-api-1.1.1.jar" />
    <get src="${krb.repo.url}/commons-math-1.2.jar" dest="${deps.dir}/commons-math-1.2.jar" />
    <get src="${krb.repo.url}/commons-net-2.0-sources.jar" dest="${deps.dir}/commons-net-2.0-sources.jar" />
    <get src="${krb.repo.url}/commons-net-2.0.jar" dest="${deps.dir}/commons-net-2.0.jar" />
    <get src="${krb.repo.url}/commons-net-ftp-2.0.jar" dest="${deps.dir}/commons-net-ftp-2.0.jar" />
    <get src="${krb.repo.url}/compojure.jar" dest="${deps.dir}/compojure.jar" />
    <get src="${krb.repo.url}/dom4j-1.6.1.jar" dest="${deps.dir}/dom4j-1.6.1.jar" />
    <get src="${krb.repo.url}/ehcache-1.2.3.jar" dest="${deps.dir}/ehcache-1.2.3.jar" />
    <get src="${krb.repo.url}/ejb3-persistence-1.0.1.GA.jar" dest="${deps.dir}/ejb3-persistence-1.0.1.GA.jar" />
    <get src="${krb.repo.url}/ftplet-api-1.0.0.jar" dest="${deps.dir}/ftplet-api-1.0.0.jar" />
    <get src="${krb.repo.url}/ftpserver-core-1.0.0.jar" dest="${deps.dir}/ftpserver-core-1.0.0.jar" />
    <get src="${krb.repo.url}/grizzly-http-servlet-1.9.10.jar" dest="${deps.dir}/grizzly-http-servlet-1.9.10.jar" />
    <get src="${krb.repo.url}/grizzly-http-webserver-1.9.10.jar" dest="${deps.dir}/grizzly-http-webserver-1.9.10.jar" />
    <get src="${krb.repo.url}/hibernate-3.2.6.ga.jar" dest="${deps.dir}/hibernate-3.2.6.ga.jar" />
    <get src="${krb.repo.url}/hibernate-annotations-3.3.1.GA.jar" dest="${deps.dir}/hibernate-annotations-3.3.1.GA.jar" />
    <get src="${krb.repo.url}/hibernate-commons-annotations-3.0.0.ga.jar" dest="${deps.dir}/hibernate-commons-annotations-3.0.0.ga.jar" />
    <get src="${krb.repo.url}/hibernate-entitymanager-3.3.2.GA.jar" dest="${deps.dir}/hibernate-entitymanager-3.3.2.GA.jar" />
    <get src="${krb.repo.url}/hsqldb-1.8.0.7.jar" dest="${deps.dir}/hsqldb-1.8.0.7.jar" />
    <get src="${krb.repo.url}/jackcess-1.1.18.jar" dest="${deps.dir}/jackcess-1.1.18.jar" />
    <get src="${krb.repo.url}/javassist-3.4.GA.jar" dest="${deps.dir}/javassist-3.4.GA.jar" />
    <get src="${krb.repo.url}/javatar-2.5.jar" dest="${deps.dir}/javatar-2.5.jar" />
    <get src="${krb.repo.url}/javolution-5.2.6.jar" dest="${deps.dir}/javolution-5.2.6.jar" />
    <get src="${krb.repo.url}/jcl-over-slf4j-1.5.2.jar" dest="${deps.dir}/jcl-over-slf4j-1.5.2.jar" />
    <get src="${krb.repo.url}/jdom-1.0.jar" dest="${deps.dir}/jdom-1.0.jar" />
    <get src="${krb.repo.url}/jetty-6.1.15.jar" dest="${deps.dir}/jetty-6.1.15.jar" />
    <get src="${krb.repo.url}/jetty-util-6.1.15.jar" dest="${deps.dir}/jetty-util-6.1.15.jar" />
    <get src="${krb.repo.url}/jna.jar" dest="${deps.dir}/jna.jar" />
    <get src="${krb.repo.url}/jsch-20090507.jar" dest="${deps.dir}/jsch-20090507.jar" />
    <get src="${krb.repo.url}/jta-1.0.1B.jar" dest="${deps.dir}/jta-1.0.1B.jar" />
    <get src="${krb.repo.url}/junit-3.8.1.jar" dest="${deps.dir}/junit-3.8.1.jar" />
    <get src="${krb.repo.url}/junit.jar" dest="${deps.dir}/junit.jar" />
    <get src="${krb.repo.url}/log4j-1.2.14.jar" dest="${deps.dir}/log4j-1.2.14.jar" />
    <get src="${krb.repo.url}/lucene-analyzers-2.3.2.jar" dest="${deps.dir}/lucene-analyzers-2.3.2.jar" />
    <get src="${krb.repo.url}/lucene-core-2.3.2.jar" dest="${deps.dir}/lucene-core-2.3.2.jar" />
    <get src="${krb.repo.url}/lucene-snowball-2.3.2.jar" dest="${deps.dir}/lucene-snowball-2.3.2.jar" />
    <get src="${krb.repo.url}/mina-core-2.0.0-M4.jar" dest="${deps.dir}/mina-core-2.0.0-M4.jar" />
    <get src="${krb.repo.url}/nekohtml-1.9.6.2.jar" dest="${deps.dir}/nekohtml-1.9.6.2.jar" />
    <get src="${krb.repo.url}/quartz-1.6.5.jar" dest="${deps.dir}/quartz-1.6.5.jar" />
    <get src="${krb.repo.url}/rabbitmq-client.jar" dest="${deps.dir}/rabbitmq-client.jar" />
    <get src="${krb.repo.url}/rome-1.0RC2.jar" dest="${deps.dir}/rome-1.0RC2.jar" />
    <get src="${krb.repo.url}/rome-fetcher-1.0RC2.jar" dest="${deps.dir}/rome-fetcher-1.0RC2.jar" />
    <get src="${krb.repo.url}/servlet-api-2.5-20081211.jar" dest="${deps.dir}/servlet-api-2.5-20081211.jar" />
    <get src="${krb.repo.url}/slf4j-api-1.5.2.jar" dest="${deps.dir}/slf4j-api-1.5.2.jar" />
    <get src="${krb.repo.url}/slf4j-log4j12-1.5.2.jar" dest="${deps.dir}/slf4j-log4j12-1.5.2.jar" />
    <get src="${krb.repo.url}/spring-2.5.6.jar" dest="${deps.dir}/spring-2.5.6.jar" />
    <get src="${krb.repo.url}/spring-beans-2.5.5.jar" dest="${deps.dir}/spring-beans-2.5.5.jar" />
    <get src="${krb.repo.url}/spring-context-2.5.5.jar" dest="${deps.dir}/spring-context-2.5.5.jar" />
    <get src="${krb.repo.url}/spring-core-2.5.5.jar" dest="${deps.dir}/spring-core-2.5.5.jar" />
    <get src="${krb.repo.url}/testng-5.8-jdk15.jar" dest="${deps.dir}/testng-5.8-jdk15.jar" />
    <get src="${krb.repo.url}/xBaseJ.jar" dest="${deps.dir}/xBaseJ.jar" />
    <get src="${krb.repo.url}/xercesImpl-2.4.0.jar" dest="${deps.dir}/xercesImpl-2.4.0.jar" />
    <get src="${krb.repo.url}/xercesImpl.jar" dest="${deps.dir}/xercesImpl.jar" />
    <get src="${krb.repo.url}/xml-apis-1.3.03.jar" dest="${deps.dir}/xml-apis-1.3.03.jar" />
  </target>

  <target name="repl" depends="jar" description="Run a Clojure Repl">
    <java classname="clojure.lang.Repl" fork="true">
      <classpath>
        <pathelement location="${clojure.src.dir}/"/>
        <pathelement location="${classes.dir}/"/>
        <fileset dir="${deps.dir}" includes="*.jar"/>
      </classpath>
    </java>
  </target>

  <target name="test" depends="jar" >
    <!--
    <property name="cp" refid="classpath"/>
    <echo message="Classpath = ${cp}"/>
    -->

    <mkdir dir="${basedir}/target/emma" />
    <emmajava classname="clojure.main" fork="true" libclasspathref="emma.lib"
              fullmetadata="yes" sourcepath="${source.dir}"
              enabled="${emma.enabled}" >
      <filter includes="com.github.kyleburton.*" />
      <html outfile="${basedir}/target/emma/coverage.html"/>
      <xml  outfile="${basedir}/target/emma/coverage.xml" />
      <txt  outfile="${basedir}/target/emma/coverage.txt" />
      <arg value="test/src/clj/com/github/kyleburton/sandbox/suite.clj" />
      <classpath>
          <path refid="classpath" />
          <fileset dir="${target.dir}" includes="*.jar"/>
      </classpath>
    </emmajava>
  </target>



  <!-- Cobertura -->
  <property name="cobertura.dir" value="cobertura" />
  <path id="cobertura.classpath">
    <fileset dir="deps">
      <include name="*.jar" />
    </fileset>
  </path>

  <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>
  <target name="cobertura">
    <!-- <property name="cp" refid="cobertura.classpath"/> -->
    <!-- <echo message="Classpath = ${cp}"/> -->
    <cobertura-instrument todir="target/instrumented-classes">
      <classpath>
        <path refid="classpath" />
      </classpath>
      <fileset dir="target/classes">
        <include name="**/*.class"/>
      </fileset>
    </cobertura-instrument>
    <java classname="clojure.main" fork="true">
      <arg value="test/src/clj/com/github/kyleburton/sandbox/suite.clj" />
      <classpath>
        <path refid="insturmented-classpath" />
        <path location="target/instrumented-classes" />
      </classpath>
    </java>
    <!-- can't use the cobertura-report b/c it tries to analyze the
         sources and it only knows how to parse java... -->
    <!-- <cobertura-report srcdir="${clojure.src.dir}" destdir="target/cobertura"/> -->
  </target>
  <!-- Cobertura -->

</project>
